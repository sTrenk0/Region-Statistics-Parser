services:
  postgres:
    restart: on-failure
    image: postgres:16
    hostname: ${DB_HOST_NAME:-postgres}
    environment:
      POSTGRES_PORT: ${DB_PORT:-5432}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgres}
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    networks:
      - local
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${DB_PORT}:5432"


  get_data:
    build:
      context: .
    command: [ "python", "-m", "region_parser", "get-data" ]
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST_NAME: ${DB_HOST_NAME:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-postgres}
      SOURCE: ${SOURCE:-wikipedia}
    networks:
      - local



  print_data:
    build:
      context: .
    command: [ "python", "-m", "region_parser", "print-data" ]
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST_NAME: ${DB_HOST_NAME:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-postgres}
      SOURCE: ${SOURCE:-wikipedia}
    networks:
      - local


volumes:
  postgres_data:
    driver: local


networks:
  local:
    driver: bridge